<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>P11674-ReachablePairsG-USACO</title>
      <link href="/2025/08/29/P11674-ReachablePairsG-USACO/"/>
      <url>/2025/08/29/P11674-ReachablePairsG-USACO/</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h1 id="P11674-USACO25JAN-Reachable-Pairs-G"><a href="#P11674-USACO25JAN-Reachable-Pairs-G" class="headerlink" title="P11674 [USACO25JAN] Reachable Pairs G"></a>P11674 [USACO25JAN] Reachable Pairs G</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>考虑一个无向图，包含 $N$ 个结点，编号为 $1\dots N$，以及 $M$ 条边（$1\le N\le 2\cdot 10^5$，$0\le M\le 4\cdot 10^5$）。给定一个位串 $s_1s_2\dots s_N$。对于每一个 $t\in [1,N]$，在时刻 $t$ 时，</p><ul><li>如果 $s_t&#x3D;0$，则从图中移除结点 $t$。</li><li>如果 $s_t&#x3D;1$，则从图中移除结点 $t$，并在结点 $t$ 被移除之前的每对邻居之间添加一条边。</li></ul><p>注意在这两种情况下，当一个结点从图中被移除时它的所有相邻边也会被移除。</p><p>计算在每一个时刻 $1\ldots N$ 之前，可以通过一组边相互到达的结点对数。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入的第一行包含 $N$ 和 $M$。</p><p>第二行包含长为 $N$ 的位串 $s$。</p><p>以下 $M$ 行，每行包含两个整数，表示图中的一条边。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出 $N$ 行，为每一个时刻之前所求的对数。</p><h2 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例 #1"></a>输入输出样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">111</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例 #2"></a>输入输出样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 #2"></a>输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">000</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 #2"></a>输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例 #3"></a>输入输出样例 #3</h2><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入 #3"></a>输入 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">7 8</span><br><span class="line">1101101</span><br><span class="line">6 2</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">6 3</span><br><span class="line">1 3</span><br><span class="line">1 7</span><br><span class="line">4 5</span><br><span class="line">2 7</span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出 #3"></a>输出 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">7</span><br><span class="line">4</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明&#x2F;提示"></a>说明&#x2F;提示</h2><p>样例 1 解释：</p><p>在移除之前，所有结点对之间都可以相互到达。结点 $1$ 被移除后，结点 $2$ 和 $3$ 之间添加了一条边，因此它们仍然可以相互到达。</p><p>样例 2 解释：</p><p>在移除之前，所有结点对之间都可以相互到达。结点 $1$ 被移除后，结点 $2$ 和 $3$ 之间不再可以相互到达。</p><ul><li>测试点 $4\sim 6$：$N\le 100$。</li><li>测试点 $7\sim 8$：所有 $s_i$ 均等于 $0$。</li><li>测试点 $9\sim 11$：所有 $s_i$ 均等于 $1$。</li><li>测试点 $12\sim 23$：没有额外限制。</li></ul><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1>]]></content>
      
      
      <categories>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提高 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P9186-MilkSum-USACO</title>
      <link href="/2025/08/28/P9186-MilkSum-USACO/"/>
      <url>/2025/08/28/P9186-MilkSum-USACO/</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h1 id="P9186-USACO23OPEN-Milk-Sum-S"><a href="#P9186-USACO23OPEN-Milk-Sum-S" class="headerlink" title="P9186 [USACO23OPEN] Milk Sum S"></a>P9186 [USACO23OPEN] Milk Sum S</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong>注意：本题的时间限制为 4 秒，是默认时间限制的 2 倍。</strong></p><p>Farmer John 的 $N$ 头奶牛的产奶量为整数 $a_1, \dots, a_N$。也就是说，第 $i$ 头奶牛每分钟产 $a_i$ 单位的牛奶。</p><p>每天早上，Farmer John 会将所有 $N$ 头奶牛连接到谷仓的挤奶机上。他需要依次断开连接，将奶牛送去进行日常锻炼。第一头奶牛在挤奶 1 分钟后被断开连接，第二头奶牛在再挤奶 1 分钟后被断开连接，依此类推。由于第一头奶牛（假设是奶牛 $x$）只在挤奶机上停留了 1 分钟，她总共贡献了 $a_x$ 单位的牛奶。第二头奶牛（假设是奶牛 $y$）在挤奶机上停留了总共 2 分钟，因此贡献了 $2a_y$ 单位的牛奶。第三头奶牛（假设是奶牛 $z$）贡献了 $3a_z$ 单位的牛奶，依此类推。设 $T$ 表示 Farmer John 以最优顺序断开奶牛连接时，可以收集到的最大总牛奶量。</p><p>Farmer John 很好奇，如果某些奶牛的产奶量发生变化，$T$ 会如何变化。对于每个由两个整数 $i$ 和 $j$ 指定的 $Q$ 个查询，请计算如果将 $a_i$ 设置为 $j$，新的 $T$ 值会是多少。注意，每个查询都是独立的临时变化，即在考虑下一个查询之前，$a_i$ 会恢复为原始值。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行包含 $N$。</p><p>第二行包含 $a_1 \dots a_N$。</p><p>第三行包含 $Q$。</p><p>接下来的 $Q$ 行，每行包含两个用空格分隔的整数 $i$ 和 $j$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>请为每个查询输出一行，表示对应的 $T$ 值。</p><h2 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例 #1"></a>输入输出样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 10 4 2 6</span><br><span class="line">3</span><br><span class="line">2 1</span><br><span class="line">2 8</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">55</span><br><span class="line">81</span><br><span class="line">98</span><br></pre></td></tr></table></figure><h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明&#x2F;提示"></a>说明&#x2F;提示</h2><p>对于第一个查询，$a$ 将变为 $[1,1,4,2,6]$，此时 $T &#x3D; 1 \cdot 1 + 2 \cdot 1 + 3 \cdot 2 + 4 \cdot 4 + 5 \cdot 6 &#x3D; 55$。</p><p>对于第二个查询，$a$ 将变为 $[1,8,4,2,6]$，此时 $T &#x3D; 1 \cdot 1 + 2 \cdot 2 + 3 \cdot 4 + 4 \cdot 6 + 5 \cdot 8 &#x3D; 81$。</p><p>对于第三个查询，$a$ 将变为 $[1,10,4,5,6]$，此时 $T &#x3D; 1 \cdot 1 + 2 \cdot 4 + 3 \cdot 5 + 4 \cdot 6 + 5 \cdot 10 &#x3D; 98$。</p><p>$1 \leq N \leq 1.5 \cdot 10^5$，$0 \leq a_i \leq 10^8$，$1 \leq Q \leq 1.5 \cdot 10^5$，$0 \leq j \leq 10^8$。</p><ul><li>输入 2-4：$N, Q \leq 1000$。</li><li>输入 5-11：没有额外限制。</li></ul><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>下面逐行解释这份 <strong>贪心 + 前缀和 + 二分</strong> 的 AC 代码。</p><hr><h3 id="1-main-入口"><a href="#1-main-入口" class="headerlink" title="1. main 入口"></a>1. <code>main</code> 入口</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i], b[i]=a[i];</span><br></pre></td></tr></table></figure><ul><li>读入原始数组 <code>a</code> 并拷贝到 <code>b</code>。</li></ul><hr><h3 id="2-预处理"><a href="#2-预处理" class="headerlink" title="2. 预处理"></a>2. 预处理</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(b<span class="number">+1</span>, b+n<span class="number">+1</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>贪心</strong>：让值从小到大排序。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    sum += b[i]*i,      <span class="comment">// 总答案 = Σ i·b[i]</span></span><br><span class="line">    s[i]  = b[i]+s[i<span class="number">-1</span>],<span class="comment">// 前缀和数组</span></span><br><span class="line">    P[b[i]] = i;        <span class="comment">// 值 → 排序后排名（离散化）</span></span><br></pre></td></tr></table></figure><hr><h3 id="3-查询"><a href="#3-查询" class="headerlink" title="3. 查询"></a>3. 查询</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(Q--) &#123;</span><br><span class="line">    ll x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br></pre></td></tr></table></figure><ul><li><code>x</code> 是要修改的下标，<code>y</code> 是新值。</li></ul><hr><h3 id="4-计算答案"><a href="#4-计算答案" class="headerlink" title="4. 计算答案"></a>4. 计算答案</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll pos = <span class="built_in">upper_bound</span>(b<span class="number">+1</span>, b+n<span class="number">+1</span>, y) - b;</span><br></pre></td></tr></table></figure><ul><li><code>pos</code> 是 <strong>插入位置</strong>：第一个大于 <code>y</code> 的数的位置。<br>等价于“把 <code>y</code> 插到 <code>pos-1</code>”。</li></ul><hr><h3 id="5-公式展开"><a href="#5-公式展开" class="headerlink" title="5. 公式展开"></a>5. 公式展开</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; sum</span><br><span class="line">     - (a[x]*P[a[x]])         <span class="comment">// 1) 删除旧值贡献</span></span><br><span class="line">     - (s[n] - s[P[a[x]]])    <span class="comment">// 2) 后面整体前移 1 位的损失</span></span><br><span class="line">     + y*(pos - (pos &gt; P[a[x]])) <span class="comment">// 3) 插入新值贡献</span></span><br><span class="line">     + (s[n] - s[pos<span class="number">-1</span>])      <span class="comment">// 4) 新值右侧整体后移 1 位的增益</span></span><br><span class="line">     - (pos &lt;= P[a[x]])*b[P[a[x]]] &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h4 id="公式含义"><a href="#公式含义" class="headerlink" title="公式含义"></a>公式含义</h4><ul><li><code>sum</code> 原始答案。</li><li><strong>删除旧值</strong>：<ul><li>旧值在排名 <code>P[a[x]]</code>，贡献 <code>a[x] * P[a[x]]</code>。</li><li>后面 <code>[P[a[x]]+1, n]</code> 整体前移 1 位，损失 <code>s[n] - s[P[a[x]]]</code>。</li></ul></li><li><strong>插入新值</strong>：<ul><li>插入位置 <code>pos-1</code>，贡献 <code>y * (pos-1)</code>。</li><li>后面 <code>[pos, n]</code> 整体后移 1 位，增益 <code>s[n] - s[pos-1]</code>。</li></ul></li></ul><hr><h3 id="6-复杂度"><a href="#6-复杂度" class="headerlink" title="6. 复杂度"></a>6. 复杂度</h3><ul><li><strong>预处理</strong>：O(N log N)  </li><li><strong>每查询</strong>：O(log N)  </li><li><strong>总</strong>：O((N + Q) log N)，<strong>稳过 1.5e5×1.5e5 数据</strong>。</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">ll n, Q, a[<span class="number">150005</span>], b[<span class="number">150005</span>], s[<span class="number">150005</span>], sum=<span class="number">0</span>;</span><br><span class="line">map&lt;ll, ll&gt; P;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)cin &gt;&gt; a[i], b[i]=a[i];</span><br><span class="line">cin &gt;&gt; Q;</span><br><span class="line"><span class="built_in">sort</span>(b<span class="number">+1</span>, b+n<span class="number">+1</span>);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)sum+=b[i]*i, s[i]=b[i]+s[i<span class="number">-1</span>], P[b[i]]=i;</span><br><span class="line"><span class="keyword">while</span>(Q--)</span><br><span class="line">    &#123;</span><br><span class="line">ll x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">ll pos=<span class="built_in">upper_bound</span>(b<span class="number">+1</span>, b+n<span class="number">+1</span>, y)-b;</span><br><span class="line">cout &lt;&lt; sum-(a[x]*P[a[x]])-(s[n]-s[P[a[x]]])+y*(pos-(pos &gt; P[a[x]]))+(s[n]-s[pos<span class="number">-1</span>])-(pos &lt;= P[a[x]])*b[P[a[x]]] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提高 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P9183-FEB-USACO</title>
      <link href="/2025/08/28/P9183-FEB-USACO/"/>
      <url>/2025/08/28/P9183-FEB-USACO/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P9183">传送门</a></p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h1 id="P9183-USACO23OPEN-FEB-B"><a href="#P9183-USACO23OPEN-FEB-B" class="headerlink" title="P9183 [USACO23OPEN] FEB B"></a>P9183 [USACO23OPEN] FEB B</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>贝西和埃尔希正在密谋最终推翻他们的主人——农夫约翰！他们通过 $N$ 条短信进行计划。他们的对话可以用一个长度为 $N$ 的字符串 $S$ 来表示。<br>其中 $S_i$ 是字母 <code>B</code> 或 <code>E</code>，这意味着第 $i$ 条消息分别由贝西或埃尔希发送的。</p><p>然而，农夫约翰听说了这个消息，并试图拦截他们的谈话。因此，字符串 $S$ 的一些字母是 <code>F</code>，这意味着农夫约翰混淆了信息，发件人未知（贝西、埃尔希都有可能）。<br><strong>注：约翰没有发送信息！他只是在干扰奶牛间的通话！</strong></p><p>未混淆对话的兴奋程度是<strong>一只奶牛重复发送信息的次数</strong>。也就是说，子串 <code>BB</code> 或 <code>EE</code> 在 $S$ 中出现的次数。你想找到原始信息的兴奋程度，但你不知道约翰的信息中哪一条实际上是贝西或埃尔希的。在所有可能的情况下，<strong>从小到大输出</strong>所有可能的兴奋程度。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行：一个整数 $N$（通话长度）。<br>第二行：一个字符串 $S$（通话内容）。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>第一行：输出一个整数 $K$，为<strong>不同</strong>兴奋程度的可能数量。<br>随后 $K$ 行：每行一个整数，为每种兴奋程度。<strong>注意按照从小到大的顺序输出。</strong></p><h2 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例 #1"></a>输入输出样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">BEEF</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例 #2"></a>输入输出样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 #2"></a>输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">FEBFEBFEB</span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 #2"></a>输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例 #3"></a>输入输出样例 #3</h2><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入 #3"></a>输入 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">BFFFFFEBFE</span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出 #3"></a>输出 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明&#x2F;提示"></a>说明&#x2F;提示</h2><p>$1 \le N \le 2 \times 10^5$。</p><ul><li>测试点 4~8：$N \le 10$</li><li>测试点 9~20：无额外限制。</li></ul><hr><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h3 id="1-题意快速回顾"><a href="#1-题意快速回顾" class="headerlink" title="1. 题意快速回顾"></a>1. 题意快速回顾</h3><p>给定一条由 <code>B/E/F</code> 组成的字符串 <code>S</code>（长度为 <code>n</code>）。<br>每个 <code>F</code> 可以被替换成 <code>B</code> 或 <code>E</code>。<br>对所有可能的替换方案，求相邻字符相同（即出现 <code>BB</code> 或 <code>EE</code>）的对数，并把<strong>所有不同的结果</strong>从小到大输出。</p><hr><h3 id="2-变量说明"><a href="#2-变量说明" class="headerlink" title="2. 变量说明"></a>2. 变量说明</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;          <span class="comment">// 字符串长度</span></span><br><span class="line">string s,t;     <span class="comment">// s 原始串；t 用来构造“最小方案”</span></span><br><span class="line"><span class="type">int</span> l = <span class="number">0</span>;      <span class="comment">// 最小可能的对数（首项）</span></span><br><span class="line"><span class="type">int</span> r;          <span class="comment">// 最大可能的对数（末项）</span></span><br><span class="line"><span class="type">int</span> d;          <span class="comment">// 公差：1 或 2，由首尾字符决定</span></span><br></pre></td></tr></table></figure><hr><h3 id="3-公差-d"><a href="#3-公差-d" class="headerlink" title="3. 公差 d"></a>3. 公差 <code>d</code></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> d = <span class="number">2</span> - (s[<span class="number">0</span>]==<span class="string">&#x27;F&#x27;</span> || s[n<span class="number">-1</span>]==<span class="string">&#x27;F&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>若首字符或末字符为 <code>F</code>，则公差为 <strong>1</strong>；否则为 <strong>2</strong>。</li></ul><hr><h3 id="4-跳过前缀-F"><a href="#4-跳过前缀-F" class="headerlink" title="4. 跳过前缀 F"></a>4. 跳过前缀 <code>F</code></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;n<span class="number">-1</span>&amp;&amp;s[r]==<span class="string">&#x27;F&#x27;</span>;r++);</span><br></pre></td></tr></table></figure><ul><li>让 <code>r</code> 指向第一个 <strong>非 <code>F</code></strong> 的位置，作为后续扫描起点。</li></ul><hr><h3 id="5-扫描字符串，构造两种极端方案"><a href="#5-扫描字符串，构造两种极端方案" class="headerlink" title="5. 扫描字符串，构造两种极端方案"></a>5. 扫描字符串，构造两种极端方案</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = r<span class="number">+1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span>(s[i] == <span class="string">&#x27;F&#x27;</span>) &#123;</span><br><span class="line">        t[i] = t[i<span class="number">-1</span>];                 <span class="comment">// 最小方案：尽量让相邻不同</span></span><br><span class="line">        s[i] = (s[i<span class="number">-1</span>] == <span class="string">&#x27;E&#x27;</span> ? <span class="string">&#x27;B&#x27;</span> : <span class="string">&#x27;E&#x27;</span>); <span class="comment">// 最大方案：尽量让相邻相同</span></span><br><span class="line">    &#125;</span><br><span class="line">    l += (s[i] == s[i<span class="number">-1</span>]);            <span class="comment">// 最大方案累加相同对</span></span><br><span class="line">    r += (t[i] == t[i<span class="number">-1</span>]);            <span class="comment">// 最小方案累加相同对</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>对每一个位置：<ul><li><strong>最小方案</strong> <code>t</code>：把 <code>F</code> 设成与前一位相同，<strong>尽量不同</strong> → 得到最小对数 <code>l</code>。</li><li><strong>最大方案</strong> <code>s</code>：把 <code>F</code> 设成与前一位相反，<strong>尽量相同</strong> → 得到最大对数 <code>r</code>。</li></ul></li></ul><hr><h3 id="6-输出等差数列"><a href="#6-输出等差数列" class="headerlink" title="6. 输出等差数列"></a>6. 输出等差数列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; (r - l) / d + <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i += d) cout &lt;&lt; i &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>从 <code>l</code> 到 <code>r</code>，步长为 <code>d</code>，输出所有可能的兴奋程度。</li></ul><hr><h3 id="7-结论"><a href="#7-结论" class="headerlink" title="7. 结论"></a>7. 结论</h3><ul><li>所有可行结果恰好构成 <strong>等差数列</strong>，首项 <code>l</code>，末项 <code>r</code>，公差 <code>d</code>。  </li><li>代码一次性构造两端，直接输出即可。</li></ul><hr><h1 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string s,t;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    t=s;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    <span class="type">int</span> d=<span class="number">2</span>-(s[<span class="number">0</span>]==<span class="string">&#x27;F&#x27;</span>||s[n<span class="number">-1</span>]==<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;n<span class="number">-1</span>&amp;&amp;s[r]==<span class="string">&#x27;F&#x27;</span>;r++);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=r<span class="number">+1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;F&#x27;</span>)&#123;</span><br><span class="line">            t[i]=t[i<span class="number">-1</span>];s[i]=(s[i<span class="number">-1</span>]==<span class="string">&#x27;E&#x27;</span>?<span class="string">&#x27;B&#x27;</span>:<span class="string">&#x27;E&#x27;</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        l+=(s[i]==s[i<span class="number">-1</span>]);</span><br><span class="line">        r+=(t[i]==t[i<span class="number">-1</span>]); </span><br><span class="line">    &#125; </span><br><span class="line">    cout&lt;&lt;(r-l)/d<span class="number">+1</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;i+=d) cout&lt;&lt;i&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提高 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2025/08/27/test/"/>
      <url>/2025/08/27/test/</url>
      
        <content type="html"><![CDATA[<h2 id="1-标题（Heading）"><a href="#1-标题（Heading）" class="headerlink" title="1. 标题（Heading）"></a>1. 标题（Heading）</h2><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><h2 id="2-段落与换行"><a href="#2-段落与换行" class="headerlink" title="2. 段落与换行"></a>2. 段落与换行</h2><p>这是一段普通文本。<br>这是同一段内的换行（行末两个空格）。  </p><p>这是新的段落。</p><h2 id="3-强调"><a href="#3-强调" class="headerlink" title="3. 强调"></a>3. 强调</h2><p><em>斜体</em> 或 <em>斜体</em><br><strong>粗体</strong> 或 <strong>粗体</strong><br><em><strong>粗斜体</strong></em> 或 <em><strong>粗斜体</strong></em><br><del>删除线</del></p><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4. 引用"></a>4. 引用</h2><blockquote><p>一级引用  </p><blockquote><p>二级引用  </p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><h2 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>项目 1</li><li>项目 2<ul><li>子项目<ul><li>子子项目</li></ul></li></ul></li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol><li>第一项</li><li>第二项<ol><li>子项</li><li>子项</li></ol></li></ol><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><ul><li><input checked="" disabled="" type="checkbox"> 已完成任务</li><li><input disabled="" type="checkbox"> 未完成任务</li></ul><h2 id="6-代码"><a href="#6-代码" class="headerlink" title="6. 代码"></a>6. 代码</h2><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><p><code>printf(&quot;Hello, Markdown!&quot;);</code></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7. 分割线"></a>7. 分割线</h2><hr><hr><h2 id="8-链接与图片"><a href="#8-链接与图片" class="headerlink" title="8. 链接与图片"></a>8. 链接与图片</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.baidu.com/">百度</a><br><a href="https://www.github.com/" title="GitHub">带标题的链接</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><img src="https://via.placeholder.com/300x200" alt="风景"></p><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9. 表格"></a>9. 表格</h2><table><thead><tr><th>姓名</th><th>年龄</th><th>职业</th></tr></thead><tbody><tr><td>张三</td><td>28</td><td>工程师</td></tr><tr><td>李四</td><td>24</td><td>设计师</td></tr></tbody></table><h2 id="10-脚注"><a href="#10-脚注" class="headerlink" title="10. 脚注"></a>10. 脚注</h2><p>这里有一个脚注<a href="%E8%BF%99%E6%98%AF%E8%84%9A%E6%B3%A8%E5%86%85%E5%AE%B9%E3%80%82">^1</a>。</p><h2 id="11-定义列表"><a href="#11-定义列表" class="headerlink" title="11. 定义列表"></a>11. 定义列表</h2><dl><dt>术语 1</dt><dd>定义 1</dd></dl><dl><dt>术语 2<br>: 定义 2a</dt><dd>定义 2b</dd></dl><h2 id="12-上标与下标"><a href="#12-上标与下标" class="headerlink" title="12. 上标与下标"></a>12. 上标与下标</h2><p>H<del>2</del>O<br>x^2^</p><h2 id="13-高亮"><a href="#13-高亮" class="headerlink" title="13. 高亮"></a>13. 高亮</h2><p>&#x3D;&#x3D;高亮文本&#x3D;&#x3D;</p><h2 id="14-Emoji"><a href="#14-Emoji" class="headerlink" title="14. Emoji"></a>14. Emoji</h2><p>:smile: :heart: :thumbsup:</p><h2 id="15-注释"><a href="#15-注释" class="headerlink" title="15. 注释"></a>15. 注释</h2><!-- 这是注释，不会显示 --><h2 id="16-数学公式（KaTeX）"><a href="#16-数学公式（KaTeX）" class="headerlink" title="16. 数学公式（KaTeX）"></a>16. 数学公式（KaTeX）</h2><h3 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h3><p>公式 $a^2 + b^2 &#x3D; c^2$ 是勾股定理。</p><h3 id="块级公式"><a href="#块级公式" class="headerlink" title="块级公式"></a>块级公式</h3><p>$$<br>\int_{-\infty}^{\infty} e^{-x^2} dx &#x3D; \sqrt{\pi}<br>$$</p><h2 id="17-Mermaid-流程图"><a href="#17-Mermaid-流程图" class="headerlink" title="17. Mermaid 流程图"></a>17. Mermaid 流程图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[开始] --&gt; B&#123;判断&#125;</span><br><span class="line">    B --&gt;|是| C[处理]</span><br><span class="line">    B --&gt;|否| D[结束]</span><br></pre></td></tr></table></figure><h2 id="18-折叠内容"><a href="#18-折叠内容" class="headerlink" title="18. 折叠内容"></a>18. 折叠内容</h2><details>  <summary>点击展开</summary>  这里是折叠内容。</details><h2 id="19-自定义容器"><a href="#19-自定义容器" class="headerlink" title="19. 自定义容器"></a>19. 自定义容器</h2><p>::: tip<br>这是提示信息<br>:::</p><p>::: warning<br>这是警告信息<br>:::</p><p>::: danger<br>这是危险信息<br>:::</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
